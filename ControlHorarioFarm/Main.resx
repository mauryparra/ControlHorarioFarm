<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>